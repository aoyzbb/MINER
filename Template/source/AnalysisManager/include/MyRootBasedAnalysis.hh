//*********************************************
//  This is auto generated by G4gen 0.6
//                                  author:Qian

#ifndef MyRootBasedAnalysis_h
#define MyRootBasedAnalysis_h 1

#include "G4RunManager.hh"
#include "G4UnitsTable.hh"
#include "G4SystemOfUnits.hh"
#include "G4Event.hh"
#include <iomanip>

class SimEvent;
class TFile;
class TTree;
class TNtuple;
class MyDetectorConstruction;
class MyEvtAction;
class MyRunAction;

class MyRootBasedAnalysis
{
public:
    MyRootBasedAnalysis();
    ~MyRootBasedAnalysis();

    void BeginOfEventAction(const G4Event *evt);
    void EndOfEventAction(const G4Event *evt);

    void BeginOfRunAction();
    void EndOfRunAction();

    G4ClassificationOfNewTrack ClassifyNewTrack(const G4Track *aTrack);
    void SteppingAction(const G4Step *aStep);
    void PreTrackingAction(const G4Track *aTrack);
    void PostTrackingAction(const G4Track *aTrack);

    inline void SetFileName(G4String fname) { fFileName = fname; }
    inline void Activated() { active = true; }
    inline void Deactivated() { active = false; }
    inline bool IsActivated() { return active; }

    inline void SetDetectorConstruction(MyDetectorConstruction *det) { fDetector = det; }
    inline void SetRunAction(MyRunAction *run) { fRunAction = run; }
    inline void SetEvtAction(MyEvtAction *evt) { fEvtAction = evt; }
    
    SimEvent *GetSimEvent() { return fEvent; }

private:
    bool active = false;
    G4String fFileName;

    TFile *fRootFp;
    TTree *fTree;
    SimEvent *fEvent;

    MyDetectorConstruction *fDetector;
    MyRunAction *fRunAction;
    MyEvtAction *fEvtAction;
};

#endif